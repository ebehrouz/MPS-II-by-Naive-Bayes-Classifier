
/* Make  a SAS library first and preferabley name it as MPS2  */ 

/* Some basic searching in dataset to find out about all MPS II symptoms, suppose your dataset is called DiagnosisCode*/
/* Those MPS II symptoms that exist in DiagnosisCode dataset, will be part of our multivariable equation (quantificatio process) */
/* DiagnosisText_orig and DiagnosisText_calc are 2 variables from SQL tables that contain all disease information */
/* Your dataset must have a unique patient-ID for each patient */

proc print data=MPS2.DiagnosisCode (obs=100); /* CONTRACTURES (SHORTENING AND HARDENING OF TISSUES) */
where DiagnosisText_orig contains ('CONTRACTURES') ;
Run;

proc print data=MPS2.DiagnosisCode (obs=100); /* DYSOSTOSIS (SHOULDERS ARE CLOSE TO EACH OTHER)*/
where DiagnosisText_orig contains ('DYSPLASIA') ;
Run;

proc print data=MPS2.DiagnosisCode (obs=100) ; /* MACROCEPHALY */
where DiagnosisText_orig contains ('MACROCEPHALY') ;
Run;

proc print data=MPS2.DiagnosisCode (obs=100); /* SHORT STATURE */
where DiagnosisText_orig contains ('SHORT STATURE') ;
Run;

...
/**************Quantification process*****************************************************************/
/* Making a new dataset (MPS2.Diagnosis1) from MPS2.DiagnosisCode, containing all MPS II feautres */
 
OPTIONS COMPRESS=YES REUSE=YES;
Data MPS2.Diagnosis1 ;
Length DiagnosisText_orig $500 DiagnosisText_calc $500 ;
Set MPS2.DiagnosisCode ;
If find (DiagnosisText_orig,'SHORT STATURE' ) then Stature=1; 
else Stature=0;
If find (DiagnosisText_orig,'MACROCEPHALY' ) then Macrocephaly=1; 
else If find (DiagnosisText_orig,'ENLARGED HEAD' ) then Macrocephaly=1; 
else Macrocephaly=0;
If find (DiagnosisText_calc,'COMMUNICATING HYDROCEPHALUS' ) then Hydrocephalus=1; 
else Hydrocephalus=0;
If find (DiagnosisText_orig,'MACROGLOSSIA' ) then Macroglossia=1; 
else Macroglossia=0;
If find (DiagnosisText_orig,'HOARSE VOICE' ) then Voice=1; 
else Voice=0;
If find (DiagnosisText_orig,'SLEEP APNEA' ) then Apnea=1; 
else Apnea=0;
If find (DiagnosisText_orig,'COPD') then COPD=1; 
else If find (DiagnosisText_orig,'AIRWAY OBSTRUCTION' ) then COPD=1; 
else COPD=0;
If find (DiagnosisText_calc,'HEARING LOSS' ) then Hearing=1;
else Hearing=0;
If find (DiagnosisText_calc,'VISION LOSS' ) then Vision=1;
else Vision=0;
If find (DiagnosisText_calc,'STIFFNESS OF JOINT' ) then Joint=1; 
else If find (DiagnosisText_orig,'JOINT STIFFNESS' ) then Joint=1; 
else Joint=0;
If find (DiagnosisText_calc,'SPINAL CORD INJURY' ) then SpinalInjury=1; 
else If find (DiagnosisText_calc,'CONGENITAL MUSCULOSKELETAL') then SpinalInjury=1; 
else If find (DiagnosisText_orig,'SPINAL CORD COMPRESSION') then SpinalInjury=1; 
else If find (DiagnosisText_orig,'SPINAL STENOSIS' ) then SpinalInjury=1; 
else SpinalInjury=0;
If find (DiagnosisText_orig,'UMBILICAL HERNIA') then Hernia=1;
else If find (DiagnosisText_calc,'INGUINAL HERNIA') then Hernia=1;  
else Hernia=0;
If find (DiagnosisText_orig,'OTITIS' ) then Otitis=1; 
else If find (DiagnosisText_orig,'EAR INFECTION' ) then Otitis=1; 
else If find (DiagnosisText_orig,'AOM') then Otitis=1; 
else Otitis=0;
If find (DiagnosisText_orig,'RESPIRATORY INFECTION' ) then Respiratory=1; 
else Respiratory=0;
If find (DiagnosisText_orig,'RECURRENT PNEUMONIA' ) then Pneumonia=1;
else Pneumonia=0;
If find (DiagnosisText_orig,'CARPAL TUNNEL SYNDROME' ) then Carpal=1; 
else Carpal=0;
If find (DiagnosisText_orig,'HEART VALVE') then Cardiac=1; 
else If find (DiagnosisText_orig,'CARDIAC PROBLEM') then Cardiac=1; 
else If find (DiagnosisText_orig, 'HEART DISEASE') then Cardiac=1; 
else If find (DiagnosisText_orig,'VENTRICULAR HYPERTROPHY') then Cardiac=1; 
else If find (DiagnosisText_orig,'CARDIAC DISEASE') then Cardiac=1; 
else Cardiac=0;
If find (DiagnosisText_orig,'HEPATOMEGALY' ) then Hepatosplenomegaly=1; 
else If find (DiagnosisText_orig,'HEPATOSPLENOMEGALY') then Hepatosplenomegaly=1; 
else If find (DiagnosisText_orig,'ENLARGED LIVER' ) then Hepatosplenomegaly=1; 
else If find (DiagnosisText_orig,'SPLENOMEGALY' ) then Hepatosplenomegaly=1; 
else If find (DiagnosisText_orig,'ENLARGED SPLEEN' ) then Hepatosplenomegaly=1; 
else If find (DiagnosisText_orig,'HEPATOSPLENOMEGALY' ) then Hepatosplenomegaly=1; 
else Hepatosplenomegaly=0;
If find (DiagnosisText_orig,'BLADDER OBSTRUCTION' ) then Bladder=1; 
else Bladder=0;
If find (DiagnosisText_orig,'THICKENED SKIN' ) then Skin=1; 
else If find (DiagnosisText_orig,'SKIN LESION' ) then Skin=1; 
else Skin=0;
If find (DiagnosisText_orig,'SEIZURE' ) then Seizure=1; 
else Seizure=0;
If find (DiagnosisText_orig,'DIARRHEA' ) then Diarrhea=1; 
else Diarrhea=0;
Run;  


OPTIONS COMPRESS=YES REUSE=YES;
Data MPS2.Diagnosis ; 
merge MPS2.Age (In=In1)    MPS2.Diagnosis1(In=In2) ; /* Adding Age from MPS2.Age file to our disease dataset */
By Patient_ID;
If (In1=1 or In2=1) then output MPS2.Diagnosis;
Run;

data MPS2.Diagnosis; /* Removing all records from female patients */
set MPS2.Diagnosis;
If Sex='FEMALE' then Delete;
Run;


OPTIONS COMPRESS=YES REUSE=YES;  /* Making A to Z datasets for each individual symptoms (features) with no duplicate records for patients) 
Data MPS2.A  (Keep= Patient_ID Network_ID EncounterDate Age  Stature ) ;
set MPS2.Diagnosis; run;
PROC SORT DATA=MPS2.A  ;
key Patient_ID / ascending  ;
key  Stature / DESCENDING  ;
run;
PROC SORT DATA=MPS2.A  NODUPKEY ;
key Patient_ID  ;
Run;

...

OPTIONS COMPRESS=YES REUSE=YES; 
Data MPS2.Z  (Keep= Patient_ID Network_ID EncounterDate Age  Diarrhea ) ;
set MPS2.Diagnosis; run;
PROC SORT DATA=MPS2.Z  ;
key Patient_ID / ascending  ;
key  Diarrhea / DESCENDING  ;
run;
PROC SORT DATA=MPS2.Z  NODUPKEY ;
key Patient_ID  ;
Run;


OPTIONS COMPRESS=YES REUSE=YES; /* Meging all those individuale datasets from symptoms and making a single dataset without any duplicate data */
Data MPS2.Diagnosis1 ; 
Merge MPS2.A  MPS2.B MPS2.C ... MPS2.Z ;
By Patient_ID ; 
Run;

Data MPS2.Diagnosis1 (Keep=Patient_ID EncounterDate Age Apnea COPD Hearing SpinalInjury	Hernia	Otitis	Stature	Macrocephaly Respiratory Carpal	Cardiac	Hepatosplenomegaly Skin	Vision Seizure	Diarrhea Joint	Pneumonia Bladder) ; /* Removing unnecessary information and those records without encounter date*/
Set MPS2.Diagnosis1 ;
If EncounterDate=. then delete;
Run;

/**********************Selecting randomally 971 patients without MPS II (with the lowest MPS-II factor) as no MPS-II for NBC training dataset *****************/
OPTIONS COMPRESS=YES REUSE=YES;  
Data No_MPS ; 
Set MPS2.Diagnosis1 ;
MPS_II=(0.917)*Stature+(0.917)*Macrocephaly+(0.29)*Joint+(0.537)*Apnea+(0.536)*COPD
+(0.917)*Hearing+(0.153)*SpinalInjury+(0.814)*Hernia+(0.836)*Otitis+(0.493)*Respiratory
+(0.123)*Pneumonia+(0.643)*Carpal+(0.699)*Cardiac+(0.863)*Hepatosplenomegaly+(0.014)*Bladder
+(0.274)*Skin+(0.153)*Seizure+(0.521)*Diarrhea ; /* For this part and beta estimations look at Frequencies based on published paper from Needham et al. */
Run;

PROC SORT DATA=No_MPS   NODUPKEY ;
key Patient_ID  ;
Run;

PROC SORT DATA=No_MPS  ;
key MPS_II / Ascending  ;
run;

Proc univariate Data=No_MPS ;/*To see the cut off point for different ages*/
var MPS_II ;
qqplot MPS_II / normal(mu=est sigma=est  color=red ) ;
title 'Normal Q-Q Plot of MPS II index from patients 21 years old or younger';
where age <= 21 ;
run; 

Proc univariate Data=No_MPS ;
var MPS_II ;
qqplot MPS_II / normal(mu=est sigma=est color=red) ;
title 'Normal Q-Q Plot of MPS II index from patients older than 21';
where age > 21 ;
run; 

OPTIONS COMPRESS=YES REUSE=YES;/*The lowest MPS is selected for NBC training dataset for each age group */
Data No_MPS  ;
Set No_MPS ;
where   0< age <= 4  and MPS_II <= 1.3  OR 
4< age <= 7  and MPS_II <= 1  OR
7< age <= 12  and MPS_II <= 1  OR
12< age <= 18  and MPS_II <= 1  OR
18< age <= 21  and MPS_II <= 1  OR
21< age   and MPS_II <= 1.3  ;
Run;

proc sql;
alter table No_MPS
add Disease  char label='Disease' ; 
proc sql;
alter table No_MPS
add AgeCat  char label='AgeCat' ; 

OPTIONS COMPRESS=YES REUSE=YES; /* Making a dataset from patients that have no MPS II disease and also changing age to binary data */
Data No_MPS  ;
Set No_MPS ;
if Patient_ID not eq 0 then Disease="No";
else Disease="Yes";
IF 0< age <= 21  then AgeCat='1 '; 
else AgeCat='0'; 
where MPS_II >= 0 ;
Run;

OPTIONS COMPRESS=YES REUSE=YES;
Data No_MPS (Keep=MPS_II  AgeCat  Apnea COPD Hearing SpinalInjury Hernia Otitis	Stature	Macrocephaly Respiratory Carpal	Cardiac	Hepatosplenomegaly Skin	Vision Seizure	Diarrhea Joint	Pneumonia Bladder) ;
Set No_MPS ;
Run;

OPTIONS COMPRESS=YES REUSE=YES; /* Patient_ID had to be dropped to publish these info in public domain, but you really don't need to do that */
Data No_MPS  (drop=Patient_ID) ;
Set No_MPS ;
Rename AgeCat=Age;
Run;

OPTIONS COMPRESS=YES REUSE=YES;
Data No_MPS ; /* Reordering variables */
Retain   Age 	Apnea	COPD	Hearing	SpinalInjury	Hernia	Otitis	Stature Macrocephaly Respiratory Carpal	Cardiac	 Hepatosplenomegaly Skin Seizure Diarrhea Joint	Pneumonia Bladder Disease  MPS_II;
Set No_MPS ;
Run;

proc surveyselect  data= No_MPS1  /* Choosing randomely 971 patients with the lowest MPS II factor as non MPS II patients */
method=srs  n=971  out= No_MPS2;
run;

proc print data=No_MPS2    ; 
run; 
